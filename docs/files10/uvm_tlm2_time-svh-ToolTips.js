NDContentPage.OnToolTipsLoaded({1267:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype1267\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"4\" data-NarrowColumnCount=\"3\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/4\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">static function void</span> set_time_resolution(</div><div class=\"PType InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\"><span class=\"SHKeyword\">real</span>&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">res</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"3/1/4/4\" style=\"grid-area:1/4/2/5\">)</div></div></div></div><div class=\"TTSummary\">Set the default canonical time resolution.</div></div>",1276:"<div class=\"NDToolTip TGroup LSystemVerilog\"><div class=\"TTSummary\">Integers are not sufficient, on their own, to represent time without any ambiguity: you need to know the scale of that integer value.&nbsp; That scale is information conveyed outside of that integer.&nbsp; In SystemVerilog, it is based on the timescale that was active when the code was compiled.&nbsp; SystemVerilog properly scales time literals, but not integer values.&nbsp; That\'s because it does not know the difference between an integer that carries an integer value and an integer that carries a time value.&nbsp; The \'time\' variables are simply 64-bit integers, they are not scaled back and forth to the underlying precision.</div></div>"});