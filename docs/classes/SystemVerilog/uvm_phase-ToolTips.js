NDContentPage.OnToolTipsLoaded({118:"<div class=\"NDToolTip TEnumeration LSystemVerilog\"><div class=\"TTSummary\">This is an attribute of a uvm_phase object which defines the phase type.</div></div>",124:"<div class=\"NDToolTip TEnumeration LSystemVerilog\"><div class=\"TTSummary\">The set of possible states of a phase. This is an attribute of a schedule node in the graph, not of a phase, to maintain independent per-domain state</div></div>",139:"<div class=\"NDToolTip TEnumeration LSystemVerilog\"><div class=\"TTSummary\">Specifies the operand when using methods like uvm_phase::wait_for_state.</div></div>",1561:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1561\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_component</div></div></div><div class=\"TTSummary\">The uvm_component class is the root base class for UVM components. In addition to the features inherited from uvm_object and uvm_report_object, uvm_component provides the following interfaces:</div></div>",1702:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1702\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_objection</div></div></div><div class=\"TTSummary\">Objections provide a facility for coordinating status information between two or more participating components, objects, and even module-based IP.</div></div>",1737:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1737\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_domain</div></div></div><div class=\"TTSummary\">Phasing schedule node representing an independent branch of the schedule.&nbsp; Handle used to assign domains to components or hierarchies in the testbench</div></div>",1756:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1756\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_phase</div></div></div><div class=\"TTSummary\">This base class defines everything about a phase: behavior, state, and context.</div></div>",2095:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2095\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_object</div></div></div><div class=\"TTSummary\">The uvm_object class is the base class for all UVM data and hierarchical classes. Its primary role is to define a set of methods for such common operations as create, copy, compare, print, and record. Classes deriving from uvm_object must implement the pure virtual methods such as create and get_type_name.</div></div>",1732:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1732\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_topdown_phase</div></div></div><div class=\"TTSummary\">Virtual base class for function phases that operate top-down.&nbsp; The pure virtual function execute() is called for each component.</div></div>",1737:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1737\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_domain</div></div></div><div class=\"TTSummary\">Phasing schedule node representing an independent branch of the schedule.&nbsp; Handle used to assign domains to components or hierarchies in the testbench</div></div>",1880:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1880\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_task_phase</div></div></div><div class=\"TTSummary\">Base class for all task phases.&nbsp; It forks a call to uvm_phase::exec_task() for each component in the hierarchy.</div></div>",1904:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1904\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_bottomup_phase</div></div></div><div class=\"TTSummary\">Virtual base class for function phases that operate bottom-up.&nbsp; The pure virtual function execute() is called for each component.&nbsp; This is the default traversal so is included only for naming.</div></div>"});