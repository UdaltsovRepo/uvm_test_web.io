NDSummary.OnToolTipsLoaded("SystemVerilogClass:uvm_reg_item",{561:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype561\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_reg_item</div></div></div><div class=\"TTSummary\">Defines an abstract register transaction item. No bus-specific information is present, although a handle to a uvm_reg_map is provided in case a user wishes to implement a custom address translation algorithm.</div></div>",563:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype563\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_elem_kind_e element_kind</div></div><div class=\"TTSummary\">Kind of element being accessed: REG, MEM, or FIELD. See uvm_elem_kind_e.</div></div>",564:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype564\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_object element</div></div><div class=\"TTSummary\">A handle to the RegModel model element associated with this transaction.&nbsp; Use element_kind to determine the type to cast&nbsp; to: uvm_reg, uvm_mem, or uvm_reg_field.</div></div>",565:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype565\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">rand</span> uvm_access_e kind</div></div><div class=\"TTSummary\">Kind of access: READ or WRITE.</div></div>",566:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype566\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">rand</span> uvm_reg_data_t value[]</div></div><div class=\"TTSummary\">The value to write to, or after completion, the value read from the DUT.&nbsp; Burst operations use the values property.</div></div>",567:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype567\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">rand</span> uvm_reg_addr_t offset</div></div><div class=\"TTSummary\">For memory accesses, the offset address. For bursts, the ~starting~ offset address.</div></div>",568:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype568\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_status_e status</div></div><div class=\"TTSummary\">The result of the transaction: IS_OK, HAS_X, or ERROR.&nbsp; See uvm_status_e.</div></div>",569:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype569\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_reg_map local_map</div></div><div class=\"TTSummary\">The local map used to obtain addresses. Users may customize address-translation using this map. Access to the sequencer and bus adapter can be obtained by getting this map\'s root map, then calling uvm_reg_map::get_sequencer and uvm_reg_map::get_adapter.</div></div>",570:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype570\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_reg_map map</div></div><div class=\"TTSummary\">The original map specified for the operation. The actual map used may differ when a test or sequence written at the block level is reused at the system level.</div></div>",571:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype571\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">uvm_path_e path</div></div><div class=\"TTSummary\">The path being used: UVM_FRONTDOOR or UVM_BACKDOOR.</div></div>",572:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype572\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">rand</span> uvm_sequence_base parent</div></div><div class=\"TTSummary\">The sequence from which the operation originated.</div></div>",573:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype573\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> prior = <span class=\"SHNumber\">-1</span></div></div><div class=\"TTSummary\">The priority requested of this transfer, as defined by uvm_sequence_base::start_item.</div></div>",574:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype574\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">rand</span> uvm_object extension</div></div><div class=\"TTSummary\">Handle to optional user data, as conveyed in the call to write(), read(), mirror(), or update() used to trigger the operation.</div></div>",575:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype575\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">string</span> bd_kind</div></div><div class=\"TTSummary\">If path is UVM_BACKDOOR, this member specifies the abstraction kind for the backdoor access, e.g. &quot;RTL&quot; or &quot;GATES&quot;.</div></div>",576:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype576\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">string</span> fname</div></div><div class=\"TTSummary\">The file name from where this transaction originated, if provided at the call site.</div></div>",577:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype577\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> lineno</div></div><div class=\"TTSummary\">The file name from where this transaction originated, if provided at the call site.</div></div>",579:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype579\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"6\" data-NarrowColumnCount=\"5\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/6\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">function</span> new(</div><div class=\"PType InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\"><span class=\"SHKeyword\">string</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">name</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:1/4/2/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"1/5/2/6\" data-NarrowGridArea=\"2/4/3/5\" style=\"grid-area:1/5/2/6\"><span class=\"SHString\">&quot;&quot;</span></div><div class=\"PAfterParameters\" data-WideGridArea=\"1/6/2/7\" data-NarrowGridArea=\"3/1/4/6\" style=\"grid-area:1/6/2/7\">)</div></div></div></div><div class=\"TTSummary\">Create a new instance of this type, giving it the optional ~name~.</div></div>",580:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype580\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div></div><div class=\"TTSummary\">Returns a string showing the contents of this transaction.</div></div>",581:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype581\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"4\" data-NarrowColumnCount=\"3\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/4\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">virtual function void</span> do_copy(</div><div class=\"PType InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">uvm_object&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">rhs</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"3/1/4/4\" style=\"grid-area:1/4/2/5\">)</div></div></div></div><div class=\"TTSummary\">Copy the ~rhs~ object into this object. The ~rhs~ object must derive from uvm_reg_item.</div></div>"});