NDContentPage.OnToolTipsLoaded({36:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype36\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_reg_adapter</div></div></div><div class=\"TTSummary\">This class defines an interface for converting between uvm_reg_bus_op and a specific bus transaction.</div></div>",582:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"TTSummary\">Struct that defines a generic bus transaction for register and memory accesses, having ~kind~ (read or write), ~address~, ~data~, and ~byte enable~ information.&nbsp; If the bus is narrower than the register or memory location being accessed, there will be multiple of these bus operations for every abstract uvm_reg_item transaction. In this case, ~data~ represents the portion of uvm_reg_item::value being transferred during this bus cycle.&nbsp; If the bus is wide enough to perform the register or memory operation in a single cycle, ~data~ will be the same as uvm_reg_item::value.</div></div>",990:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype990\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_sequence_item</div></div></div><div class=\"TTSummary\">The base class for user-defined sequence items and also the base class for the uvm_sequence class. The uvm_sequence_item class provides the basic functionality for objects, both sequence items and sequences, to operate in the sequence mechanism.</div></div>",1454:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1454\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> uvm_tlm_generic_payload </div><div class=\"CPName\">uvm_tlm_gp</div></div></div><div class=\"TTSummary\">This typedef provides a short, more convenient name for the uvm_tlm_generic_payload type.</div></div>"});