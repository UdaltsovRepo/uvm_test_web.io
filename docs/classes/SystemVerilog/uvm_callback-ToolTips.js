NDContentPage.OnToolTipsLoaded({2095:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2095\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_object</div></div></div><div class=\"TTSummary\">The uvm_object class is the base class for all UVM data and hierarchical classes. Its primary role is to define a set of methods for such common operations as create, copy, compare, print, and record. Classes deriving from uvm_object must implement the pure virtual methods such as create and get_type_name.</div></div>",31:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype31\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_vreg_field_cbs</div></div></div><div class=\"TTSummary\">Pre/post read/write callback facade class</div></div>",464:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype464\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_vreg_cbs</div></div></div><div class=\"TTSummary\">Pre/post read/write callback facade class</div></div>",607:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype607\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_reg_cbs</div></div></div><div class=\"TTSummary\">Facade class for field, register, memory and backdoor access callback methods.</div></div>",1726:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1726\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">uvm_objection_callback</div></div></div><div class=\"TTSummary\">The uvm_objection is the callback type that defines the callback implementations for an objection callback. A user uses the callback type uvm_objection_cbs_t to add callbacks to specific objections.</div></div>",1911:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1911\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">virtual</span></div><div class=\"CPName\">uvm_report_catcher</div></div></div><div class=\"TTSummary\">The uvm_report_catcher is used to catch messages issued by the uvm report server. Catchers are uvm_callbacks#(&lt;uvm_report_object&gt;,uvm_report_catcher) objects, so all factilities in the uvm_callback and uvm_callbacks#(T,CB) classes are available for registering catchers and controlling catcher state.&nbsp; The uvm_callbacks#(&lt;uvm_report_object&gt;,uvm_report_catcher) class is aliased to ~uvm_report_cb~ to make it easier to use.&nbsp; Multiple report catchers can be registered with a report object. The catchers can be registered as default catchers which catch all reports on all uvm_report_object reporters, or catchers can be attached to specific report objects (i.e. components).</div></div>"});